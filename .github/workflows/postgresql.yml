name: DevSecOps CI (ProductService - DB)

on:
  push:
    branches:
      - main  # You can change this to the branch where you want the action to trigger
      - draft
    paths:
      - 'database/**'  # Triggers only if there are changes in the 'database' subfolder
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t makwanji/productservice-db:v1.0.${{ github.run_number }} ./database
          docker push makwanji/productservice-db:v1.0.${{ github.run_number }}

      - name: Install Cosign
        run: |
          COSIGN_VERSION=$(curl -s https://api.github.com/repos/sigstore/cosign/releases/latest | jq -r '.tag_name')
          curl -L "https://github.com/sigstore/cosign/releases/download/${COSIGN_VERSION}/cosign-linux-amd64" -o /usr/local/bin/cosign
          chmod +x /usr/local/bin/cosign

        # Ref - https://raesene.github.io/blog/2021/03/21/Trying-out-cosign/
      - name: place the cosign private key in a file
        run: 'echo "$COSIGN_KEY" > /tmp/cosign.key'
        shell: bash
        env:
          COSIGN_KEY: ${{secrets.COSIGN_KEY}}

      - name: Sign image using Cosign
        continue-on-error: true
        run: |
          echo -n "${{secrets.COSIGN_KEY_PASSPHRASE}}" | /usr/local/bin/cosign sign --yes --registry-username='${{ secrets.DOCKER_USERNAME }}' --registry-password='${{ secrets.DOCKER_PASSWORD }}' --key /tmp/cosign.key docker.io/makwanji/productservice-db:v1.0.${{ github.run_number }}

      # Step 5: Scan the Docker image for vulnerabilities
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        continue-on-error: true
        with:
          image-ref: 'makwanji/productservice-db:v1.0.${{ github.run_number }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Deploy to Kubernetes cluster
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kube config
        run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      # - name: Deploy to EKS
      #   run: |
      #     kubectl set image deployments/ps-database ps-database=docker.io/makwanji/productservice-db:v1.0.${{ github.run_number }} -n ps
#

