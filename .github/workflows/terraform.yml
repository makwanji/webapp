name: Terraform CI/CD

on:
  push:
    branches:
      - main
      - draft
    paths:
      - 'terraform/**'  # Triggers only if there are changes in the 'terraform' subfolder
  workflow_dispatch:

jobs:
  scan:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status

  terraform:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Checkov GitHub Action
        continue-on-error: true
        uses: bridgecrewio/checkov-action@v12
        with:
          # This will add both a CLI output to the console and create a results.sarif file
          output_format: cli,sarif
          output_file_path: console,results.sarif

      - name: Upload SARIF file
        continue-on-error: true
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: results.sarif

      - uses: actions/cache@v4
        continue-on-error: true
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ubuntu-tflint-hcl${{ hashFiles('.tflint.hcl') }}

      # Step 2: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.0.0  # Specify your Terraform version here

      - uses: terraform-linters/setup-tflint@v4
        continue-on-error: true
        name: Setup TFLint
        with:
          tflint_version: v0.52.0

      # Step 3: Run Terraform format
      - name: Terraform Format
        continue-on-error: true
        run: terraform fmt -check terraform

      - name: TFLint version
        continue-on-error: true
        run: tflint --version

      - name: Init TFLint
        continue-on-error: true
        run: cd terraform && tflint --init && cd ..

      - name: Terraform plan
        run: echo "plan"

      - name: Request Approval
        run: echo "Request Approval"

      - name: Terraform apply
        # if: steps.approval.outputs.approved == 'true'
        run: echo "apply"
